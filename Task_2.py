# Дополнительное задание:
# Ты разрабатываешь программное обеспечение для сети магазинов. Каждый магазин в этой сети имеет свои особенности, но также существуют общие характеристики, такие как адрес,
# название и ассортимент товаров. Ваша задача — создать класс Store, который можно будет использовать для создания различных магазинов.

# 1. Создай класс Store:
# -Атрибуты класса:
# name: название магазина.
# address: адрес магазина.
# items: словарь, где ключ - название товара, а значение - его цена. Например, {'apples': 0.5, 'bananas': 0.75}.

# Методы класса:
# __init__ - конструктор, который инициализирует название и адрес, а также пустой словарь дляitems`.
# метод для добавления товара в ассортимент.
# метод для удаления товара из ассортимента.
# метод для получения цены товара по его названию. Если товар отсутствует, возвращайте None.
# метод для обновления цены товара.

# 2. Создай несколько объектов класса Store:
# Создай не менее трех различных магазинов с разными названиями, адресами и добавь в каждый из них несколько товаров.

# 3. Протестировать методы:
# Выбери один из созданных магазинов и протестируй все его методы: добавь товар, обнови цену, убери товар и запрашивай цену.

class Store:
    def __init__(self, name, address):
        self.name = name
        self.address = address
        self.items = {}

    def add_item(self, item, price):
        self.items[item] = price
        print(f'Товар "{item}" добавлен в ассортимент с ценой {price} рублей.')

    def remove_item(self, item):
        if item in self.items:
            del self.items[item]
            print(f'Товар "{item}" удален из ассортимента.')
        else:
            print(f'Товар "{item}" не найден в ассортименте.')

    def get_price(self, item):
        return self.items.get(item)

    def update_price(self, item, new_price):
        if item in self.items:
            self.items[item] = new_price
            print(f'Цена товара "{item}" рублей обновлена на {new_price} рублей.')
        else:
            print(f'Товар "{item}" не найден в ассортименте.')

    def show_items(self):
        print(f'Ассортимент "{self.name}":')
        for item, price in self.items.items():
            print(f'Товар: {item}, Цена: {price} рублей.')


# Создание объектов класса Store
store1 = Store("Магазин овощей", "Адрес магазина 1")
store2 = Store("Магазин одежды", "Адрес магазина 2")
store3 = Store("Магазин электроники", "Адрес магазина 3")

# Добавление товаров в ассортимент магазина №1
store1.add_item("Помидоры", 20)
store1.add_item("Огурцы", 30)

# Добавление товаров в ассортимент магазина №2
store2.add_item("Джинсы", 100)
store2.add_item("Футболка", 200)

# Добавление товаров в ассортимент магазина №3
store3.add_item("Iphone", 1000)
store3.add_item("Samsung", 1000)
store3.add_item("Xiaomi", 1000)

# Обновление информации в магазине №1
store1.show_items()
store1.update_price("Помидоры", 25)
store1.remove_item("Огурцы")
store1.add_item("Картофель", 50)
store1.get_price("Помидоры")
store1.show_items()